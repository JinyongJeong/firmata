////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef FIRMATA_IO_BASE_HPP
#define FIRMATA_IO_BASE_HPP

////////////////////////////////////////////////////////////////////////////////
#include "firmata/types.hpp"
#include <functional>

////////////////////////////////////////////////////////////////////////////////
namespace firmata
{

////////////////////////////////////////////////////////////////////////////////
// Interface for communication with Firmata host
//
class io_base
{
public:
    ////////////////////
    virtual void write(msg_id, const payload& = { }) = 0;

    // set read callback
    using callback = std::function<void(msg_id, const payload&)>;
    virtual void read_callback(callback) = 0;

    // block until condition
    using condition = std::function<bool()>;
    virtual void wait_until(const condition&) = 0;
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
